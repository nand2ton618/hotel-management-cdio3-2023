// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_LOCAL")
}

model booking {
  id              Int      @id @default(autoincrement())
  customer_id     Int
  room_id         Int
  booking_date    DateTime @default(now())
  check_in        String
  check_out       String
  total_price     Int
  remaining_price Int
  payment_status  Boolean

  customer customer @relation(fields: [customer_id], references: [id])
  room     room     @relation(fields: [room_id], references: [id])
}

model complaint {
  id               Int      @id @default(autoincrement())
  complainant_name String
  complaint_type   String
  complaint        String
  created_at       DateTime @default(now())
  resolve_status   Boolean
  resolve_date     DateTime
  budget           Decimal  @db.Decimal(18, 0)
}

model card_type {
  id        Int    @id @default(autoincrement())
  card_type String

  customers customer[]
  employees employee[]
}

model room {
  id               Int    @id @default(autoincrement())
  room_type_id     Int
  room_number      String @db.VarChar(10)
  description      String
  status           Int
  check_in_status  Int
  check_out_status Int
  delete_status    Int

  room_type room_type @relation(fields: [room_type_id], references: [id])
  bookings  booking[]
}

model room_type {
  id         Int    @id @default(autoincrement())
  room_type  String
  price      Int
  max_person Int

  rooms room[]
}

model user {
  id           Int      @id @default(autoincrement())
  username     String
  email        String   @unique
  phone_number String
  password     String
  address      String
  role         role     @default(CUSTOMER)
  is_active    Boolean
  created_at   DateTime @default(now())

  customers customer[]
  employees employee[]
}

model customer {
  id           Int    @id @default(autoincrement())
  user_id      Int
  card_number  String
  card_type_id Int

  user      user      @relation(fields: [user_id], references: [id])
  card_type card_type @relation(fields: [card_type_id], references: [id])
  bookings  booking[]
}

model employee {
  id               Int     @id @default(autoincrement())
  user_id          Int
  card_number      Int
  card_type_id     Int
  employee_type_id Int
  shift_id         Int
  salary           Decimal @db.Decimal(18, 0)

  employee_type employee_type @relation(fields: [employee_type_id], references: [id])
  card_type     card_type     @relation(fields: [card_type_id], references: [id])
  user          user          @relation(fields: [user_id], references: [id])
  shiff         shift         @relation(fields: [shift_id], references: [id])
}

model employee_type {
  id            Int    @id @default(autoincrement())
  employee_type String

  employees employee[]
}

model shift {
  id           Int    @id @default(autoincrement())
  shift        String
  shift_timing String

  employees employee[]
}

enum role {
  ADMIN
  EMPLOYEE
  CUSTOMER
}
